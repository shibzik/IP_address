var address={
    //-------TEST function---------------------
      test:function (){
        var string="192.168.1.44//23";
        console.log("Imput Address: "+this.imputAddress(string));
        console.log("Complete Address: "+this.completeAddress(string));
        console.log("Net Mask: " +this.netMask(string));
        console.log("Network Size: "+this.netSize(string));
        console.log("Network Address: "+this.netAddress(string));
        console.log("Broadcast Address: "+this.broadAddress(string));
        console.log("Check Address: "+this.check(string));
        
    },
   //------- convert string imput address format in array data
    imputAddress: function(stringAddress){
       var addrImput=[];    
       var num1str="";
       var num2str="";
       var num3str="";
       var num4str="";
       var maskstr="";
       var point=1;
       
            for(i=0;i<stringAddress.length;i++){
                if(stringAddress[i]===".") point++;
                if(stringAddress[i-1]==="/") point=1919191;
                if(stringAddress[i]!="." && stringAddress[i]!="/") {
                    switch (point){
                        case 1:num1str+=stringAddress[i];break;
                        case 2:num2str+=stringAddress[i];break;
                        case 3:num3str+=stringAddress[i];break;
                        case 4:num4str+=stringAddress[i];break;
                        case 1919191: maskstr+=stringAddress[i];break;
                 
             }   
         }
         }
     addrImput[0]=Number(num1str);// byte nr.1
     addrImput[1]=Number(num2str);// byte nr.2
     addrImput[2]=Number(num3str);// byte nr.3
     addrImput[3]=Number(num4str);// byte nr.4
     addrImput[4]=Number(maskstr);// byte mask
     
      return addrImput;
     
     
   },
     
  
//-----check correct imput------------------------------------
   check: function(stringAddress){
      var error=0; // number of error
      var imput=this.imputAddress(stringAddress);
      var complete=this.completeAddress(stringAddress);
      for(var i=0;i<8;i++){
          if(i<5){
              if(imput[i]>255 || complete[i]>255 ||imput[i]<0 || complete[i]<0) error++;
          }else{
              if(complete[i]>255 || complete[i]<0) error++;
          }
      }
      if(imput[4]>32) error++;
      var point=0;
      var slash=0;
      for(i=0;i<stringAddress.length;i++){
          if(stringAddress[i]===".")point++;
          if(stringAddress[i]==="/")slash++;
          if((stringAddress[i]==="." && stringAddress[i+1]===".")||
             (stringAddress[i]==="." && stringAddress[i+1]==="/")||
             (stringAddress[i]==="/" && stringAddress[i+1]===".")||
             (stringAddress[i]==="/" && stringAddress[i+1]==="/")
            ) error++;
      }
      
      if(point>3||slash!==1) error++;
      if(error!==0)  {
          
          console.log("Wrong address format! Must be like: 192.168.1.1/24");
          return false;
      }else return true;
      
   },
//------calculate full address with mask---------------------
   completeAddress: function(stringAddress){
       var addrOutput=[];
       var addrImput=this.imputAddress(stringAddress);
       
       addrOutput=addrImput.slice(0,4);
       var mask=addrImput[4];
       
       var val=32-mask;//---number of address bits mask
       var poz=(mask-mask%8)/8;
       
       for(var i=4;i<4+poz;i++){
           addrOutput[i]=255;
           
       }
       
       if(4+poz<8){
           if(val%8!==0)
           addrOutput[4+poz]=256-Math.pow(2,val%8);
           else addrOutput[4+poz]=0;
           
       }
       //--- complite mask part with 0.
       for(i=4;i<8;i++){
           if (addrOutput[i]===undefined) addrOutput[i]=0;
           
       }
       
       
       return addrOutput;
   },
    
//------- full net mask-----------
    netMask:function(stringAddress){
       var mask=[];
       mask=this.completeAddress(stringAddress).slice(4,8);
       return mask;
    },
//------ number of valid IP addresses including network & broadcast address   
   netSize: function(stringAddress){
       var addrOutput=this.completeAddress(stringAddress);
       var networkSize;// number of addresses in range
       networkSize=(256-addrOutput[7])*(256-addrOutput[6])*(256-addrOutput[5])*(256-addrOutput[4]);
       return networkSize;
       
   },
//-------Network address   
   netAddress:function(stringAddress){
       var mask=this.netMask(stringAddress);
       var addr=this.completeAddress(stringAddress);
       var netAddr=[];
       for(var i=0;i<4;i++){
           if (mask[i]===255){
               netAddr[i]=addr[i];
               
           } else {
               var n=256-mask[i]; // find valid address
               var local=0;
               while (local+n<addr[i]){
                   local+=n;
                   
               }
               netAddr[i]=local;
               
           }
      }
     return netAddr;
  },
  
//--------Broadcast Address-------------------
  broadAddress : function(stringAddress){
    var broadcast=[];
    broadcast=this.netAddress(stringAddress);
    var size=this.netSize(stringAddress);
    for(var i=0;i<size-1;i++){
        broadcast[3]++;
        if (broadcast[3]===256){
            broadcast[3]=0;
            broadcast[2]++;
            if(broadcast[2]===256){
                broadcast[2]=0;
                broadcast[1]++;
                if (broadcast[1]===256){
                    broadcast[1]=0;
                    broadcast[0]++;
                }
                
            }
            
        }
        
    }
     
    return broadcast;
   

},
// ------------------ Address Information-------------------------
    info : function(s){
        var imp=this.imputAddress(s);
        var comp=this.completeAddress(s);
        var mask=this.netMask(s);
        var size=this.netSize(s);
        var net=this.netAddress(s);
        var broad=this.broadAddress(s);
        var chek=this.check(s);
        console.log("Your imput is : "+s);
        console.log("--------------------------");
        console.log("--------NETWORK INFORMATION----------");
        console.log("Imput Address/address.imputAddress(arg): "+imp[0]+"."+imp[1]+"."+imp[2]+"."+imp[3]+"/"+imp[4]);
        console.log("Complete Address/address.completeAddress(arg): "+comp[0]+"."+comp[1]+"."+comp[2]+"."+comp[3]+" "+comp[4]+"."+comp[5]+"."+comp[6]+"."+comp[7]);
        console.log("Net Mask/address.netMask(arg): " +mask[0]+"."+mask[1]+"."+mask[2]+"."+mask[3]);
        console.log("Network Size/address.netSize(arg): "+size);
        console.log("Network Address/address.netAddress(arg): "+net[0]+"."+net[1]+"."+net[2]+"."+net[3]);
        console.log("Broadcast Address/address.broadAddress(arg): "+broad[0]+"."+broad[1]+"."+broad[2]+"."+broad[0]);
        console.log("Check Address/address.check(arg): "+this.check(s));
        console.log("Address info is called as addres.info(arg)");
        console.log("------------------------------");
        console.log("NB!!!__arg is string, format 192.168.1.1/24 ");
        
    }
   
};

var adr=prompt("Indicate address, ex 192.168.30.13/23:");
if(address.check(adr)===true) {
    address.info(adr);
}else {
    alert("Wrong address format! Correct format: 192.168.30.13/23");
    adr=prompt("Indicate address, ex 192.168.30.13/23:");
}
    

 
